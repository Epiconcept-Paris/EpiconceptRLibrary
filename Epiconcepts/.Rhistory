source('~/.active-rstudio-document', echo=TRUE)
ec.summary("ill")
ec.summary("ill", detail = TRUE)
qplot("boxplot", GDS$ill)
qplot(boxplot, GDS$ill)
qplot("boxplot", GDS$ill)
qplot("boxplot", GDS$age)
qplot(GDS$age)
qplot(GDS$age type="boxplot")
boxplot(GDS$age)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/R/SYRIA")
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
install.packages("rgeos")
source('~/R/SYRIA/sD.R', echo=TRUE)
ec.codebook(detail = )
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
install.packages(c("BH", "car", "dplyr", "epiR", "fBasics", "ggmap", "gss", "jsonlite", "knitr", "manipulate", "maptools", "Rcpp", "rmarkdown", "timeDate", "timeSeries", "xtable"))
library(Epiconcepts)
setwd("~/R/Librarie_R/trunk/Tests")
library(Epiconcepts)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Librarie_R/trunk/Epiconcepts/R/CCInter.class.R', echo=TRUE)
GDS <- GDS[!is.na, ]
GDS <- GDS[!is.na(), ]
GDS <- is.na(GDS)
View(GDS)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("Factoshiny")
library(factoshiny)
library(Factoshiny)
data(decathlon)
str(decathlon)
PCAshiny(decathlon)
setwd("~/FUN/Analyse Multidimensionelle")
eaux <- read.table("Eaux.csv", sep=";", header=TRUE)
eaux
PCAshiny(eaux)
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1 )
eaux
PCAshiny(eaux)
eaux
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1, encoding="latin1" )
eaux
PCAshiny(eaux)
?read.csv
?plyr
??plyr
library(Epiconcepts)
??ggplot2
GDS$ill
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x <- GDS[1]
class(x)
x <- GDS[[1]]
class(x)
x <- GDS$ill
class(x)
x <- GD[ill]
x <- GDS[ill]
x <- GDS["ill"]
x
class(x)
x <- GDS[,"ill"]
class(x)
class(GDS$ill)
source('~/.active-rstudio-document', echo=TRUE)
str(GDS)
source('~/.active-rstudio-document', echo=TRUE)
`$`(GDS, ill)
`$`(GDS, "ill")
`$`(GDS, "dateonset")
`$`(GDS, 1)
`$`(GDS, "1")
GDS[order(GDS[, by]),]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
ec.move("uniquekey", where="before", target="ill")
View(GDS)
ec.tabulate
ec.freq
GDS$key <- GDS$uniquekey
GDS$uniquekey <- NULL
View(GDS)
View(x)
gds$Tiramitsu <- GDS$tira
GDS$Tiramitsu <- GDS$tira
View(GDS)
GDS$tira <- NULL
View(GDS)
library(Factoshiny)
setwd("~/FUN/Analyse Multidimensionelle")
Eaux <- read.csv("~/FUN/Analyse Multidimensionelle/Eaux.csv", sep=";")
View(Eaux)
Eaux <- read.table("Eaux.csv", sep=";", header=TRUE, encoding="latin1", names=TRUE)
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1, encoding="latin1" )
PCAshiny(eaux)
ec.Rename()
View(GDS)
View(GDS)
ec.Rename("ill", "kéké")
GDS$kéké
GDS$pépé <- GDS$kéké
GDS$pépé
sd(GDS$age)
mean(GDS$age)
mean(GDS$dateonset)
ec.use("Tiramitsu", extension="df")
ec.removeMissing()
by = "dateonset"
by2 = "sex"
ec.use("Tiramitsu", extension="df")
min(GDS$dateonset)
min(GDS$age)
sd(GDS$age)
sd(GDS$age, na.rm=T)
setwd("~/LIBRAIRIE_R/trunk/Epiconcepts/R")
library(Epiconcepts)
data(mtcars)
ecr.tabulate(mtcars, mtcars$cyl)
ecr.tabulate(mtcars, mtcars$cyl)
ecr.tabulate(mtcars, mtcars$mpg)
str(mtcars)
data(iris)
str(iris)
ecr.tabulate(iris, iris$Species)
ecr.tabulate(iris, iris$Species, nolabel=TRUE)
table(iris$Species)
OUTPUT_FORMAT=TRUE
ecr.tabulate(iris, iris$Species, nolabel=TRUE)
library(Epiconcepts)
setwd("~/LIBRAIRIE_R/trunk/Tests")
ec.use("RAW")
cat("hello world")
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
TB_outcomes_2015.06.15 <- read.csv("~/R/Cours/TB_outcomes_2015-06-15.csv", header=FALSE)
View(TB_outcomes_2015.06.15)
?read.table
rm(list=ls())
setwd("~/R/Cours")
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
class(mydata)
str(mydata)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
str(mydata)
View(mydata)
df = mydata
rm(mydata)
source('~/R/Cours/exo1.R', echo=TRUE)
View(df)
str(df)
source('~/R/Cours/exo1.R', echo=TRUE)
str(df)
View(df)
df$isoé
df$iso2
mean(df$year)
min(df$year)
max(df$year)
df[1]
df[100,1]
df[1,1]
df[1,6]
df[1,"year"]
df[df$year = 1994, "year"]
df[df$year == 1994, "year"]
df[df$year == 1994 | df$year==1995, "year"]
df[df$year == 1994 | df$year==1995, ]
df2 <- df[df$year == 1994 | df$year==1995,
]
write.table(df2, filen="mydata2.csv")
write.table(df2, file="mydata2.csv")
class(df$year)
c(1,56,84,65)
v <- c(1,56,84,65)
v
v.length()
v.length
length(v)
length(df$year)
length(df)
str(df)
nrows(df)
nrow(df)
head(df)
head(df), n=2
head(df,n = 2
)
tail(df)
is.na(df)
df[is.na(df),]
df[!is.na(df),]
df3 <- df[!is.na(df),]
source('~/R/Cours/exo1.R', echo=TRUE)
df3 <- df[!is.na(df[,]),]
df3 <- df[!is.na(df[,]),]
data(iris)
iris
plot(iris$Petal.Length)
boxplot(iris£)
boxplot(iris$Petal.Length)
boxplot(iris$Petal.Length ~iris$Species)
data(iris3)
iris3
boxplot(iris$Petal.Length ~iris$Species),
hist(iris$Sepal.Length)
mean(iris$Petal.Length)
mein(iris$Petal.Length)
min(iris$Petal.Length)
max(iris$Petal.Length)
sd(iris$Petal.Length)
quantile(iris$Petal.Length)
median(iris$Petal.Length)
summary(iris$Petal.Length)
plot(summary(iris$Petal.Length))
library(Epiconcepts)
ec.use("Tiramitsu", "df")
str(GDS)
ec.freq("age")
plot'ec.freq("age"))
ec.plot'ec.freq("age"))
ec.plot(ec.freq("age"))
ec.histogram("age")
ec.plot(ec.histogram("age"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
cat("hello world\n my friend")
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
as.str(df)
str(df)
View(df)
source('~/.active-rstudio-document', echo=TRUE)
str(df)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
M
colnames(M) <- c("A","B")
M
rownames(M) <- c("A1", "B1", "C1")
M
rownames(M)
rownames(M)[1] <-c("Z")
rownames(M)
colnames(df)[1] <- "Countries"
colnames(df)
library(Epiconcepts)
df5 <- df[order(df[,"year]"])]
df5 <- df[order(df[,"year]"]),]
df5 <- df[order(df[,"year"]),]
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/R/Cours")
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
setwd("~/R/Cours")
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
df5 <- df[order(df[,"year"]),]
View(df5)
df6 <- df[rev(order(df[,"year"])),]
View(df6)
source('~/.active-rstudio-document', echo=TRUE)
myfunc(12,15)
source('~/.active-rstudio-document', echo=TRUE)
myfunc(12,15)
source('~/R/Cours/exo1.R', echo=TRUE)
myfunc(12,15)
source('~/R/Cours/exo1.R', echo=TRUE)
myfunc(12,15)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
for ( i in colnames(df)) {
sprintf("%s", i)
}
source('~/.active-rstudio-document', echo=TRUE)
for ( i in 1:10) {
sprintf("%s", i)
}
source('~/.active-rstudio-document', echo=TRUE)
for (i in 1:10) { cat("*")}
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/R/Cours/exo1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
A
source('~/.active-rstudio-document', echo=TRUE)
A
install.packages("Hmisc")
library(Epiconcepts)
source('~/R/Librarie_R/trunk/Tests/Test_ecr.ccinter.R', echo=TRUE)
source('~/R/Librarie_R/trunk/Tests/Test_ecr.ccinter.R', echo=TRUE)
source('~/R/Librarie_R/trunk/Tests/Test_ecr.ccinter.R', echo=TRUE)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
data(iris)
ecr.rename(iris, "Sepal.Length", "SL")
iris <- ecr.rename(iris, "Sepal.Length", "SL")
str(iris)
library(Epiconcepts)
ec.Use("Tiramitsu", "df");
ec.rename('age','Age');
ec.use("Tiramitsu", "df");
ec.rename('age','Age');
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
ec.cc("ill", "tira")
library(Epiconcepts)
ec.cc("ill", "tira")
?ec.ccinter
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
data(iris)
iris <- ec.move(tomove = "Species", where = "first")
iris <- ec.move(tomove = "Species", where = "first", df=iris)
str(iris)
library(Epiconcepts)
data(iris)
iris <- ec.move(tomove = "Species", where = "first", df=iris)
str(iris)
data(iris)
str(iris)
iris <- ec.move(tomove = "Species", where = "first", df=iris)
str(iris)
listing <- read.csv("~/R/listing.csv", encoding="UTF16", header=FALSE, sep=";", na.strings="")
View(listing)
head(listing$V39)
setwd("~/R")
df <- read.csv2("listing.csv")
View(df)
listing <- read.csv("~/R/listing.csv", sep=";")
View(listing)
rm(listing)
df2 <- read.csv("~/R/listing.csv", encoding="UTF16", sep=";", na.strings="")
View(df2)
df <- read.csv("~/R/listing.csv", sep=";")
View(df)
df$Durée.arrêt.travail
head(df$Durée.arrêt.travail)
ec.use("Tiramitsu", "df")
View(GDS)
GDS[GDS$tportion == 3, "tportion"]
GDS[GDS$tportion == 3, "tportion"] <- 2
GDS[GDS$tportion == 2, "tportion"]
length(GDS[GDS$tportion == 2, "tportion"])
complete.cases(GDS)
GDS <- GDS[complete.cases(GDS), ]
GDS[GDS$tportion == 3, "tportion"] <- 2
length(GDS[GDS$tportion == 2, "tportion"])
GDS <- GDS[GDS$tportion == 3, "tportion"] <- 2
length(GDS[GDS$tportion == 2, "tportion"])
ec.use("Tiramitsu", "df")
GDS <- GDS[complete.cases(GDS), ]
ec.use("Tiramitsu", "df")
GDS$tportion <- GDS[complete.cases(GDS$tportion), "tportion" ]
ec.use("Tiramitsu", "df")
GDS$tportion <- GDS[complete.cases(GDS$tportion),]
GDS <- GDS[complete.cases(GDS$tportion),]
GDS <- GDS[GDS$tportion == 3, "tportion"] <- 2
ec.use("Tiramitsu", "df")
GDS <- GDS[complete.cases(GDS$tportion),]
GDS$tportion <- GDS[GDS$tportion == 3, "tportion"] <- 2
length(GDS[GDS$tportion == 2, "tportion"])
View(GDS)
ec.use("Tiramitsu", "df")
GDS$tportion <- GDS[GDS$tportion == 3, "tportion"] <- 2
GDS$tportion <- GDS[GDS$tportion == 3 & !is.na(GDS$tportion), "tportion"] <- 2
length(GDS[GDS$tportion == 2, "tportion"])
ec.ccinter("ill", "mousse", by = "tportion")
ec.ccinter("ill", "tira")
ec.ccinter("ill", "tira", "beer")
ec.ccinter("ill", "mousse", "beer")
ec.ccinter("ill", "mousse", "tportion")
GDS$tportion
ec.use("Tiramitsu", "df")
ec.ccinter("ill", "mousse", "tportion")
ec.recode(tportion, list(VAL("tportion")==0),VAL("tportion")==1),VAL("tportion")==2), VAL("tportion")==3)),list(0,1,2,2))
ec.recode(tportion, list(VAL("tportion")==0,VAL("tportion")==1,VAL("tportion")==2, VAL("tportion")==3),list(0,1,2,2))
ec.recode("tportion", list(VAL("tportion")==0,VAL("tportion")==1,VAL("tportion")==2, VAL("tportion")==3),list(0,1,2,2))
View(GDS)
ec.ccinter("ill", "mousse", "tportion")
?epi.2by2
.T <- table(GDS[,"ill"], GDS[,"mouse"], GDS[,"tportion"])
.T <- table(GDS[,"ill"], GDS[,"mousse"], GDS[,"tportion"])
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="woolf")
library(epiR)
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="woolf")
summary(.R)
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="breslow.day")
summary(.R)
View(GDS)
write.csv2(GDS, "Tira1.csv")
.T <- table(GDS[,"ill"], GDS[,"mouse"])
.T <- table(GDS[,"ill"], GDS[,"mousse"])
.T <- table(GDS[,"ill"], GDS[,"mousse"], useNA="no")
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="breslow.day")
summary(.R)
.T <- table(GDS[,"ill"], GDS[,"mousse"], useNA="always")
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="breslow.day")
.T <- table(GDS[,"ill"], GDS[,"mousse"], useNA="no")
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="woolf")
summary(.R)
GDS <- GDS[!is.na(GDS$ill),]
GDS <- GDS[!is.na(GDS$mousse),]
.T <- table(GDS[,"ill"], GDS[,"mousse"])
.R = epi.2by2(dat=.T, method="case.control", outcome="as.columns", homogeneity="woolf")
summary(.R)
source('~/R/Librarie_R/trunk/Epiconcepts/R/01_EpiFuns.R', echo=TRUE)
.T <- table(GDS[,"ill"], GDS[,"mousse"])
res <- or(.T)
res
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
ec.use("Tiramitsu", "df")
ec.ccinter("ill", "mousse", "tportion")
library(Epiconcepts)
ec.ccinter("ill", "mousse", "tportion")
