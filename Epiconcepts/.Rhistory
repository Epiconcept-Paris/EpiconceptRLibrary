source('~/R/SYRIA/sC.R', echo=TRUE)
View(MAP0)
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
View(P)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
View(P)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
setwd("~/R/Librarie_R/trunk/Tests")
source('~/.active-rstudio-document', echo=TRUE)
ec.freq("ill")
OUPUT_FORMAT = TRUE
ec.freq("ill")
ec.freq("ill")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
OUTPUT_FORMAT=TRUE
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
knit2html("Test_ec.codebook.Rmd")
library("knitr", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
knit2html("Test_ec.codebook.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(mtcars)
OUTPUT_FORMAT <- TRUE
source('~/.active-rstudio-document', echo=TRUE)
ec.summary("ill")
ec.summary("ill", detail = TRUE)
qplot("boxplot", GDS$ill)
qplot(boxplot, GDS$ill)
qplot("boxplot", GDS$ill)
qplot("boxplot", GDS$age)
qplot(GDS$age)
qplot(GDS$age type="boxplot")
boxplot(GDS$age)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/R/SYRIA")
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
install.packages("rgeos")
source('~/R/SYRIA/sD.R', echo=TRUE)
ec.codebook(detail = )
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
install.packages(c("BH", "car", "dplyr", "epiR", "fBasics", "ggmap", "gss", "jsonlite", "knitr", "manipulate", "maptools", "Rcpp", "rmarkdown", "timeDate", "timeSeries", "xtable"))
library(Epiconcepts)
setwd("~/R/Librarie_R/trunk/Tests")
library(Epiconcepts)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Librarie_R/trunk/Epiconcepts/R/CCInter.class.R', echo=TRUE)
GDS <- GDS[!is.na, ]
GDS <- GDS[!is.na(), ]
GDS <- is.na(GDS)
View(GDS)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("Factoshiny")
library(factoshiny)
library(Factoshiny)
data(decathlon)
str(decathlon)
PCAshiny(decathlon)
setwd("~/FUN/Analyse Multidimensionelle")
eaux <- read.table("Eaux.csv", sep=";", header=TRUE)
eaux
PCAshiny(eaux)
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1 )
eaux
PCAshiny(eaux)
eaux
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1, encoding="latin1" )
eaux
PCAshiny(eaux)
?read.csv
?plyr
??plyr
library(Epiconcepts)
??ggplot2
GDS$ill
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x <- GDS[1]
class(x)
x <- GDS[[1]]
class(x)
x <- GDS$ill
class(x)
x <- GD[ill]
x <- GDS[ill]
x <- GDS["ill"]
x
class(x)
x <- GDS[,"ill"]
class(x)
class(GDS$ill)
source('~/.active-rstudio-document', echo=TRUE)
str(GDS)
source('~/.active-rstudio-document', echo=TRUE)
`$`(GDS, ill)
`$`(GDS, "ill")
`$`(GDS, "dateonset")
`$`(GDS, 1)
`$`(GDS, "1")
GDS[order(GDS[, by]),]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
ec.move("uniquekey", where="before", target="ill")
View(GDS)
ec.tabulate
ec.freq
GDS$key <- GDS$uniquekey
GDS$uniquekey <- NULL
View(GDS)
View(x)
gds$Tiramitsu <- GDS$tira
GDS$Tiramitsu <- GDS$tira
View(GDS)
GDS$tira <- NULL
View(GDS)
library(Factoshiny)
setwd("~/FUN/Analyse Multidimensionelle")
Eaux <- read.csv("~/FUN/Analyse Multidimensionelle/Eaux.csv", sep=";")
View(Eaux)
Eaux <- read.table("Eaux.csv", sep=";", header=TRUE, encoding="latin1", names=TRUE)
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1, encoding="latin1" )
PCAshiny(eaux)
ec.Rename()
View(GDS)
View(GDS)
ec.Rename("ill", "kéké")
GDS$kéké
GDS$pépé <- GDS$kéké
GDS$pépé
sd(GDS$age)
mean(GDS$age)
mean(GDS$dateonset)
ec.use("Tiramitsu", extension="df")
ec.removeMissing()
by = "dateonset"
by2 = "sex"
ec.use("Tiramitsu", extension="df")
min(GDS$dateonset)
min(GDS$age)
sd(GDS$age)
sd(GDS$age, na.rm=T)
library(Epiconcepts)
data(mtcars)
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
GDS <- mtcars
ec.tabulate("cyl")
library(Epiconcepts)
ec.tabulate("cyl")
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
library(Epiconcepts)
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
ecr.tabulate(mtcars, mtcars$cyl)
nrow(mtcars$cyl)
nrow(mtcars)
library(Epiconcepts)
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
ecr.tabulate(mtcars, mtcars$cyl)
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
ec.tabulate("cyl")
library(Epiconcepts)
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
data(iris)
p.simpleSummary(iris$Species)
p.simpleSummary(iris$Sepal.Length)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
c(sum(is.na(iris$Sepal.Lengthx)));
c(sum(is.na(iris$Sepal.Length)));
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
c(sum(is.na(iris$Sepal.Length)));
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
mean(iris$Sepal.Length)
max(iris$Sepal.Length)
min(iris$Sepal.Length)
sd(iris$Sepal.Length)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
nrow(iris$Sepal.Length)
length(iris$Sepal.Length)
source('~/R/Librarie_R/trunk/Epiconcepts/R/00_privates.functions.R', echo=TRUE)
p.simpleSummary(iris$Sepal.Length, "Sepal.length")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.summary.class.R', echo=TRUE)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
class(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length)
GDS <- iris
ec.summary("Sepal.Length")
library(Epiconcepts)
library(Epiconcepts)
GDS <- iris
ec.summary("Sepal.Length")
ec.summary("Sepal.Length", detail=T)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
ecr.summary(iris$Sepal.Length)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
GDS <- iris
ecr.summary(iris$Sepal.Length, detail=T)
iris
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
ec.summary("Sepal.Length", detail=T)
library(Epiconcepts)
ecr.summary(iris$Sepal.Length, detail=T)
library(Epiconcepts)
ec.summary("Sepal.Length", detail=T)
library(Epiconcepts)
ec.summary("Sepal.Length", detail=T)
ec.summary("Sepal.Length")
str(GDS)
ec.summary("Species")
ecr.summary("Species")
library(Epiconcepts)
ecr.summary("Species")
ecr.summary("Species", detail=T)
ec.summary("Species", detail=T)
ec.summary("Species")
library(Epiconcepts)
ecr.summary("Species", detail=T)
library(Epiconcepts)
ecr.summary("Species", detail=T)
ecr.summary(iris$Speccies, detail=T)
ecr.summary(GDSiris$Speccies, detail=T)
library(Epiconcepts)
ecr.summary(GDS$Speccies, detail=T)
GDS$Speccies
GDS$Species
ecr.summary(GDS$Species, detail=T)
ecr.summary(GDS$Species)
ec.summary("Species")
library(Epiconcepts)
ec.summary("Species")
library(Epiconcepts)
ec.summary("Species")
library(Epiconcepts)
ec.summary("Species")
ecr.summary(GDS$Species)
library("knitr", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
kable(head(GDS))
install.packages("printr")
kable(head(GDS), digits = 4)
head(GDS)
library(Epiconcepts)
ecr.summary(GDS$Species)
OUTPUT_FORMAT
OUTPUT_FORMAT <- T
ecr.summary(GDS$Species)
ec.summary("Species")
library(Epiconcepts)
ec.summary("Species")
library(Epiconcepts)
ec.summary("Species")
ec.summary("Species")
library(Epiconcepts)
ec.summary("Species")
ec.summary("Sepal.length")
ec.summary("Sepal.Length")
library(Epiconcepts)
ec.summary("Sepal.Length")
kable(head(iris))
library(Epiconcepts)
ecr.summary(GDS$Sepal.Length)
help(rep)
help(rep)
??bacteria
V=factor(c(rep("TB",4),rep("B",3),rep("AB",5),rep("P",2))),
V=factor(c(rep("TB",4),rep("B",3),rep("AB",5),rep("P",2)))
barplot(v)
V <- factor(c(rep("TB",4),rep("B",3),rep("AB",5),rep("P",2)))
barplot(V)
barplot(table(V),col=rainbow(4))
plot(V)
plot(V), col=1:4
plot(V), col=1:4)
plot(V, col=1:4)
plot(V, col=1:4, title(main="mon beau titre",outer=TRUE))
plot(V, col=1:4)
title(main="mon beau titre",outer=TRUE))
title(main="mon beau titre",outer=TRUE)
plot(V, col=1:4)
title(main="mon beau titre")
?var
x=c(10,10,3,4,5,4,6,10,3,5)
table(x)
mean(x)
t <- table(x)
mean(t)
weighted.mean(c(10,3,4,5,6),c(3,2,2,2,1)/10)
weighted.mean(table(x),as.numeric(names(t))/sum(t))
weighted.mean(as.numeric(names(t)), table(x)/sum(t))
?par
hist(GDS$Species,proba=TRUE)
hist(GDS$Sepal.Length,proba=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
str(GDS)
ec.freq("Species")
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
library(Epiconcepts)
ecr.freq("GDS$Species")
library(Epiconcepts)
ecr.freq("GDS$Species")
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
ec.freq("GDS$Species")
ecr.freq(GDS$Species)
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq(GDS$Species)
ec.freq("Species")
table(GDS$Species)
ec.plot(ec.freq("Species"))
ec.plot(ecr.freq("GDS$Species"))
ecr.freq("GDS$Species")
source('~/R/Librarie_R/trunk/Epiconcepts/R/ecr.freq.R', echo=TRUE)
library(Epiconcepts)
ecr.freq("GDS$Species")
table("GDS$Species")
table(GDS$Species)
ec.plot(ecr.freq(GDS$Species))
str(GDS)
table(GDS$Sepal.Length)
