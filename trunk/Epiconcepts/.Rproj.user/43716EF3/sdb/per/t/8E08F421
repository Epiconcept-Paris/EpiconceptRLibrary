{
    "contents" : "library(methods)\n\nsetClass(\"ec.freq\",\n         # ==== Inheritance\n         contain = \"EpiPlot\",\n         # ==== Properties\n         representation (\n           vardate      = \"character\",\n           vartype      = \"character\",\n           varcut       = \"character\",\n           tableFreq    = \"data.frame\",\n           EPC.MAXY     = \"numeric\"\n         )           \n);\n\n# ------------------------------------------------------------------------------\n# Real constructor\n# ------------------------------------------------------------------------------\nsetMethod(\"initialize\", \"ec.freq\",\n  function(.Object, x, by=NULL, where=NULL, caption) {\n    if (is.character(by)) {\n      if (is.vector(where)) {\n        R = data.frame(table(GDS[where, x], GDS[where, by]));\n        #return(R)\n        names(R) <- c(x, by, \"Freq\");\n        .Object@tableFreq <- R;\n        return(.Object);\n      }\n      R = data.frame(table(VAL(x), VAL(by)));\n      #R = table(VAL(x), VAL(by));\n      names(R) <- c(x, by, \"Freq\");\n      .Object@tableFreq <- R;\n      return(.Object);\n    }\n    if (is.vector(where)) {\n      R = data.frame(table(GDS[where, x]));\n      names(R) <- c(x, \"Freq\");\n      .Object@tableFreq <- R;\n      return(.Object);\n    }\n    R = data.frame(table(GDS[, x]));\n    names(R) <- c(x, \"Freq\");\n    .Object@tableFreq <- R;\n    return(.Object);\n\n  }\n);\n# =============================================================================\n\n# -----------------------------------------------------------------------------\n# method show\n# -----------------------------------------------------------------------------\nsetMethod(\"show\" ,\"ec.freq\" ,\n  function(object) {\n#digits =  c(0,0,0,0,1,0,0,1,2,3,3,4);\n#align  =  c(\"l\",\"r\",\"c\",\"c\",\"r\",\"c\",\"c\",\"r\",\"r\",\"r\",\"r\",\"r\");\n    df <- xtable(object@tableFreq);\n    print(df, type = \"html\", include.rownames = F);\n  }\n);\n\nsetMethod (\"ec.plot\" , signature=\"ec.freq\",\n           function(this,\n                    title    =\"\",\n                    fillcolor=\"\",\n                    ylabel   =\"\",\n                    xlabel   =\"\",\n                    bgcolor  =\"\"\n           ) {\n             DF <- this@tableFreq;\n             varname = names(DF)[1];\n             varpart = ifelse(ncol(DF) == 3, names(DF)[2], \"\") ;\n             G_TITLE = ifelse(title != \"\", sprintf(\"%s\\n\",title), \"\");\n             G_LABELY = ifelse(ylabel != \"\", ylabel, \"Frequency\");\n             G_LABELX = ifelse(xlabel != \"\", xlabel, varname);\n             G_FILLCOLOR = ifelse(fillcolor != \"\", fillcolor, \"lightblue\");\n             T_BGCOLOR = ifelse(bgcolor == \"\", \"white\", bgcolor);\n             THEME <- theme(panel.background = element_rect(fill = T_BGCOLOR)) +\n               theme(axis.ticks.margin=unit(c(0.25,0.25),'line')) +\n               theme(plot.margin = unit(c(0.5,0.5,0,0), \"cm\")) +\n               theme(panel.margin = unit(c(0,0,0,0), \"mm\"))\n             \n             # -------------------------------------------------------------------------\n             # Effective drawing\n             # -------------------------------------------------------------------------    \n             Draw <- function(O) {\n               P_ <- ggplot(DF, aes_string(x = varname, y=\"Freq\", ymax=50))\n               P_ <- P_ + geom_bar(stat=\"identity\", colour=\"black\", fill=G_FILLCOLOR, na.action=na.exclude);\n               if (G_TITLE != \"_AUTO_\") P_ <- P_ + ggtitle(G_TITLE);\n               P_ <- P_ + xlab(G_LABELX);\n               P_ <- P_ + ylab(G_LABELY);\n               P_ <- P_ + scale_y_continuous(expand = c(0,0))\n               P_ <- P_ + THEME;\n               if (varpart != \"\") {\n                 P_ <- P_ + facet_wrap(eval(parse(text = paste('~', varpart, sep=''))), ncol=2);\n               }\n               plot(P_);\n             }\n             Draw(this);\n           });\n\n# -----------------------------------------------------------------------------\n# function: ec.freq (call real constructor)\n# Return: an object of type AgePyramide\n# -----------------------------------------------------------------------------\nec.freq <- function(x, by=NULL, where=NULL, caption)\n{\n  return(new(\"ec.freq\", x=x, by=by, where=where, caption=caption));\n}\n\n\n         ",
    "created" : 1421617436999.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "278235000",
    "id" : "8E08F421",
    "lastKnownWriteTime" : 1424081552,
    "path" : "~/R/Epiconcepts/R/ec.freq.R",
    "project_path" : "R/ec.freq.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}