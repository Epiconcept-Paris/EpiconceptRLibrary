library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
tab
tab = table(GDS$ill, GDS$sex, dnn=c("ill"))
tab
as.data.frame.matrix(tab)
tab = table(GDS$ill, GDS$sex)
tab
as.data.frame.matrix(tab)
colname(tab)
colnames(tab)
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
colnames(tab)
as.data.frame.matrix(tab)
tab = table(GDS$ill, GDS$sex, dnn="ill")
tab
as.data.frame.matrix(tab)
colnames(tab
)
tab = table(GDS$ill, GDS$sex, dnn=c("ill"))
colnames(tab
)
as.data.frame.matrix(tab)
r <- as.data.frame.matrix(tab)
r
str(r)
library(Epiconcepts)
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
library(Epiconcepts)
knit2html("Test_Lib_Epiconcepts.Rmd")
setwd("~/R/Librarie_R/trunk/Tests")
library("knitr", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
knit2html("Test_ec.freq.Rmd")
library(Epiconcepts)
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
library("xtable", lib.loc="/usr/lib64/R/library")
library("xtable", lib.loc="/usr/lib64/R/library")
knit2html("Test_ec.freq.Rmd")
library(Epiconcepts)
ec.freq("ill", where=c(VAL("tira")==0));
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.freq.Rmd")
knit2html("Test_ec.preview.Rmd")
knit2html("Test_ec.preview.Rmd")
knit2html("Test_ec.preview.Rmd")
knit2html("Test_ec.preview.Rmd")
knit2html("Test_Lib_Epiconcepts.Rmd")
knit2html("Test_ec.preview.Rmd")
data(mtcars)
ec.preview(df=mtcars)
knit2html("Test_ec.preview.Rmd")
knit2html("Test_ec.preview.Rmd")
Sys.setlocale(category = "LC_ALL", locale = "fr_FR.UTF-8")'
''
Sys.setlocale(category = "LC_ALL", locale = "fr_FR.UTF-8")
png()
plot(GDS$age)
dev.off
library(grDevices) # pour jpeg
library(grDevices)
png()
plot(GDS$age)
dev.off
png(file="test.png", width="800")
png(file="test.png", width=800)
plot(GDS$age)
dev.off
dev.off()
setwd("~/R/Librarie_R/trunk/Tests")
png(file="test.png", width=800)
plot(GDS$age)
dev.off()
plot(GDS$age, main="Voilà des accents : àéùô")
dev.off()
png(file="test2.png", width=800)
plot(GDS$age, main="Voilà des accents : àéùô")
dev.off()
knit2html("Test_ec.use.Rmd")
library("knitr", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
knit2html("Test_ec.use.Rmd")
knit2html("Test_ec.use.Rmd")
RAW <- read.csv("~/R/Librarie_R/trunk/Tests/RAW.csv", sep=";", dec=",")
View(RAW)
str(RAW)
source('~/.active-rstudio-document', echo=TRUE)
str(GDS)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
knit2html("Test_ec.use.Rmd")
library(Epiconcepts)
knit2html("Test_ec.use.Rmd")
library(Epiconcepts)
knit2html("Test_ec.use.Rmd")
knit2html("Test_ec.use.Rmd")
knit2html("Test_ec.use.Rmd")
knit2html("Test_ec.use.Rmd")
library(Epiconcepts)
knit2html("Test_ec.use.Rmd")
library(Epiconcepts)
library(Epiconcepts)
library(Epiconcepts)
knit2html("Test_ec.use.Rmd")
knit2html("Test_ec.use.Rmd")
library(Epiconcepts)
knit2html("Test_ec.use.Rmd")
knit2html("Test_ec.use.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
as.POSIXct(GDS$dateonset, format="%Y-%m-%d")
GDS$dateonset <- as.POSIXct(GDS$dateonset, format="%Y-%m-%d")
str(GDS)
View(GDS)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
GDS$dateonset <- as.date(as.character(GDS$dateonset), format="%Y-%m-%d")
GDS$dateonset <- as.Date(as.character(GDS$dateonset), format="%Y-%m-%d")
str(GDS)
class(GDS$dateonset)
is.vector(GDS$dateonset)
is.vector(GDS$sex)
class(GDS$sex)
typeof(GDS$sex)
typeof(GDS$dateonset
)
knit2html("Test_ec.toDate.Rmd")
knit2html("Test_ec.toDate.Rmd")
knit2html("Test_ec.toDate.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
knit2html("Test_ec.toDate.Rmd")
is.list(GDS$dateonset)
is.atomic("x")
is.atomic(GDS$dateonset)
is.vector(GDS$dateonset)
is.list(GDS$dateonset)
is.data.frame(GDS$dateonset)
mode(GDS$dateonset)
class(GDS$dateonset)
length(GDS$dateonset)
length(1)
length("x")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
nrow("are")
nrow(GDS$dateonset)
nrow(as.data.frame(GDS$dateonset))
nrow(as.data.frame("aze"))
is.data.frame(GDS$dateonset)
nrow(as.data.frame(1))
nrow(GDS$dateonset)
ncol(GDS$dateonset)
c(GDS$dateonset)
nrow(c(GDS$dateonset))
ncol(c(GDS$dateonset))
length(c(GDS$dateonset))
length(c("dfdfqsf"))
colname(c(GDS$dateonset))
colnames(c(GDS$dateonset))
name(GDS$dateonset)
colnames(GDS$dateonset)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
knit2html("Test_ec.toDate.Rmd")
knit2html("Test_ec.toDate.Rmd")
ec.plot(ec.freq("dateonset"))
ec.freq("ill")
output
library(Epiconcepts)
ec.freq("ill")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ec.freq("ill")
library(Epiconcepts)
ec.freq("ill")
ec.freq("ill")
OUTPUT_FORMAT < true
OUTPUT_FORMAT <- TRUE
ec.freq("ill")
library(Epiconcepts)
ec.freq("ill")
library(Epiconcepts)
ec.freq("ill")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/R/SYRIA")
source('~/R/SYRIA/s8.R', echo=TRUE)
source('~/R/SYRIA/sA.R', echo=TRUE)
source('~/R/SYRIA/sA.R', echo=TRUE)
source('~/R/SYRIA/sA.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sC.R', echo=TRUE)
install.packages("raster")
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sB.R', echo=TRUE)
source('~/R/SYRIA/sC.R', echo=TRUE)
View(MAP0)
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sC.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
View(P)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
View(P)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
source('~/R/SYRIA/sE2.R', echo=TRUE)
setwd("~/R/Librarie_R/trunk/Tests")
source('~/.active-rstudio-document', echo=TRUE)
ec.freq("ill")
OUPUT_FORMAT = TRUE
ec.freq("ill")
ec.freq("ill")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
OUTPUT_FORMAT=TRUE
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
knit2html("Test_ec.codebook.Rmd")
library("knitr", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
knit2html("Test_ec.codebook.Rmd")
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(mtcars)
OUTPUT_FORMAT <- TRUE
source('~/.active-rstudio-document', echo=TRUE)
ec.summary("ill")
ec.summary("ill", detail = TRUE)
qplot("boxplot", GDS$ill)
qplot(boxplot, GDS$ill)
qplot("boxplot", GDS$ill)
qplot("boxplot", GDS$age)
qplot(GDS$age)
qplot(GDS$age type="boxplot")
boxplot(GDS$age)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/R/SYRIA")
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
install.packages("rgeos")
source('~/R/SYRIA/sD.R', echo=TRUE)
ec.codebook(detail = )
source('~/R/SYRIA/sD.R', echo=TRUE)
source('~/R/SYRIA/sD.R', echo=TRUE)
install.packages(c("BH", "car", "dplyr", "epiR", "fBasics", "ggmap", "gss", "jsonlite", "knitr", "manipulate", "maptools", "Rcpp", "rmarkdown", "timeDate", "timeSeries", "xtable"))
library(Epiconcepts)
setwd("~/R/Librarie_R/trunk/Tests")
library(Epiconcepts)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/R/Librarie_R/trunk/Epiconcepts/R/CCInter.class.R', echo=TRUE)
GDS <- GDS[!is.na, ]
GDS <- GDS[!is.na(), ]
GDS <- is.na(GDS)
View(GDS)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("Factoshiny")
library(factoshiny)
library(Factoshiny)
data(decathlon)
str(decathlon)
PCAshiny(decathlon)
setwd("~/FUN/Analyse Multidimensionelle")
eaux <- read.table("Eaux.csv", sep=";", header=TRUE)
eaux
PCAshiny(eaux)
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1 )
eaux
PCAshiny(eaux)
eaux
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1, encoding="latin1" )
eaux
PCAshiny(eaux)
?read.csv
?plyr
??plyr
library(Epiconcepts)
??ggplot2
GDS$ill
library(Epiconcepts)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x <- GDS[1]
class(x)
x <- GDS[[1]]
class(x)
x <- GDS$ill
class(x)
x <- GD[ill]
x <- GDS[ill]
x <- GDS["ill"]
x
class(x)
x <- GDS[,"ill"]
class(x)
class(GDS$ill)
source('~/.active-rstudio-document', echo=TRUE)
str(GDS)
source('~/.active-rstudio-document', echo=TRUE)
`$`(GDS, ill)
`$`(GDS, "ill")
`$`(GDS, "dateonset")
`$`(GDS, 1)
`$`(GDS, "1")
GDS[order(GDS[, by]),]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(GDS)
ec.move("uniquekey", where="before", target="ill")
View(GDS)
ec.tabulate
ec.freq
GDS$key <- GDS$uniquekey
GDS$uniquekey <- NULL
View(GDS)
View(x)
gds$Tiramitsu <- GDS$tira
GDS$Tiramitsu <- GDS$tira
View(GDS)
GDS$tira <- NULL
View(GDS)
library(Factoshiny)
setwd("~/FUN/Analyse Multidimensionelle")
Eaux <- read.csv("~/FUN/Analyse Multidimensionelle/Eaux.csv", sep=";")
View(Eaux)
Eaux <- read.table("Eaux.csv", sep=";", header=TRUE, encoding="latin1", names=TRUE)
eaux <- read.table("Eaux.csv", sep=";", header=TRUE, row.names=1, encoding="latin1" )
PCAshiny(eaux)
ec.Rename()
View(GDS)
View(GDS)
ec.Rename("ill", "kéké")
GDS$kéké
GDS$pépé <- GDS$kéké
GDS$pépé
sd(GDS$age)
mean(GDS$age)
mean(GDS$dateonset)
ec.use("Tiramitsu", extension="df")
ec.removeMissing()
by = "dateonset"
by2 = "sex"
ec.use("Tiramitsu", extension="df")
min(GDS$dateonset)
min(GDS$age)
sd(GDS$age)
sd(GDS$age, na.rm=T)
